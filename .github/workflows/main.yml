name: backend CI

on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Запуск actions checkout — готового скрипта
    # для клонирования репозитория
    - uses: actions/checkout@v2
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта
      # для развёртывания окружения Python
      uses: actions/setup-python@v2
      with:
        # Выбор версии Python
        python-version: 3.7
    # обновляем пип, устанавливаем flake8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r ./backend/requirements.txt
    - name: Test with flake8 and django tests
      # запуск проверки проекта по flake8
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: change directory
        run: |
          cd ./backend/
          ls -lah
      - name: Push to Docker Hub
       # Пуш образа в Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./backend/Dockerfile
          tags: inferiown/backend



  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - uses: actions/checkout@v2
    - name: scp infra files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER_HOST }}
        key: ${{ secrets.SSH_KEY }}
        source: "./infra/*"
        target: "~/foodgram/"
    - name: copy frontend
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER_HOST }}
        key: ${{ secrets.SSH_KEY }}
        source: "./frontend/*"
        target: "~/foodgram/"
    - name: copy redoc
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER_HOST }}
        key: ${{ secrets.SSH_KEY }}
        source: "./docs/*"
        target: "~/foodgram/"
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER_HOST }}
        key: ${{ secrets.SSH_KEY }}
        # берём образ с докерхаба, перезапускаем контейнеры
        script: |
          cd ./foodgram/infra
          sudo docker pull inferiown/backend:latest
          sudo docker compose down
          sudo docker compose up -d
